Кратко о части задания, связанного с SQL (и для себя, и для общего понимания идеи текущей реализации):

1) В БД внесены все таблицы, в том числе те, которые для решения 1-3 модулей не нужны (попрактиковаться)
2) Типы организаций вынесены в отдельную таблицу (хотя, это и не требуется для соблюдения НФ3) -- для "попрактиковаться"
3) В типах данных используются различные small и big - осознанный выбор для "попрактиковаться" (на экзамене лучше использовать стандартные INT, SERIAL и т.д. во избежание ошибок, на которые не хочется тратить время)
4) Для большинтсва строковых данных выбран тип TEXT с проверкой длины (более гибко, чем VARCHAR: удобнее менять ограничения в дальнейшем; для Postgres разницы в производительности нет)
5) Для телефона и ИНН используется базовая валидация через регулярные выражения (формат телефона из задания, ИНН - 10 или 12 цифр)
6) Для некоторых данных связанных таблиц тоже используется валидация (попрактиковаться)
7) Для получения партнеров используется функция (попрактиковаться; а также лаконичность/понятность SQL запросов на "фронте")
8) Для добавления и редактирования партнеров используются отдельные функции с валидацией на стороне СУБД (попрактиковаться с исключениями; и, кажется, так более правильно)
9) +Функция удаления партнера (попрактиковаться)

а) Основной целью была задача вынести определенную часть логики валидации на сторону СУБД (потому что там, по идее, "есть понимание", какая должна быть структура и какие критерии валидации)
б) Не совсем относится к SQL, но на фронте допускается внесение "нулевых" данных для полей, кроме типа организации и наименования (опять же, с целью "попрактиковаться" с СУБД)